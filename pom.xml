<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.github.metaluna</groupId>
  <artifactId>ck2edit</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>ck2edit</name>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <mainClass>io.github.metaluna.ck2edit.App</mainClass>
  </properties>

  <build>
    <resources>
      <!-- Load FXML, CSS and resource bundles from source packages -->
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.fxml</include>
          <include>**/*.css</include>
          <include>**/*.properties</include>
        </includes>
      </resource>
      <!-- Copy all configuration files to the JAR directory -->
      <resource>
        <directory>src/main/resources/config</directory>
        <targetPath>${project.build.directory}</targetPath>
        <includes>
          <include>log4j2.xml</include>
        </includes>
      </resource>
      <!-- Do not package configuration files into the JAR -->
      <resource>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>config/*</exclude>
        </excludes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>unpack-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <excludeScope>system</excludeScope>
              <excludeGroupIds>junit,org.mockito,org.hamcrest</excludeGroupIds>
              <outputDirectory>${project.build.directory}/classes</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <executions>
          <execution>
            <id>package-jar</id>
                        
            <phase>package</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${java.home}/../bin/javapackager</executable>
              <arguments>
                <argument>-createjar</argument>
                <argument>-nocss2bin</argument>
                <argument>-appclass</argument>
                <argument>${mainClass}</argument>
                <argument>-srcdir</argument>
                <argument>${project.build.directory}/classes</argument>
                <argument>-outdir</argument>
                <argument>${project.build.directory}</argument>
                <argument>-outfile</argument>
                <argument>${project.build.finalName}.jar</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>default-cli</id>
            <goals>
              <goal>exec</goal>                            
            </goals>
            <configuration>
              <executable>${java.home}/bin/java</executable>
              <commandlineArgs>${runfx.args}</commandlineArgs>
            </configuration>
          </execution>
        </executions>  
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <compilerArguments>
            <bootclasspath>${sun.boot.class.path}${path.separator}${java.home}/lib/jfxrt.jar</bootclasspath>
          </compilerArguments>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.16</version>
        <configuration>
          <additionalClasspathElements>
            <additionalClasspathElement>${java.home}/lib/jfxrt.jar</additionalClasspathElement>
          </additionalClasspathElements>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.10.19</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testfx</groupId>
      <artifactId>testfx-core</artifactId>
      <version>4.0.1-alpha</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testfx</groupId>
      <artifactId>testfx-junit</artifactId>
      <version>4.0.1-alpha</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>com.airhacks</groupId>
      <artifactId>afterburner.fx</artifactId>
      <version>1.6.2</version>
    </dependency>
    <dependency>
      <groupId>com.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>3.4</version>
    </dependency>
  </dependencies>
</project>
